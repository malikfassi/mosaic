---
name: "Setup Environment"
description: "Sets up Node.js and Rust environment with caching"

inputs:
  node-version:
    description: "Node.js version"
    required: false
    default: ""
  node-cache-path:
    description: "Path to package-lock.json for caching"
    required: false
    default: ""
  rust-version:
    description: "Rust version"
    required: false
    default: ""
  rust-workspace-path:
    description: "Path to workspace Cargo.toml for caching"
    required: false
    default: ""
  rust-package-path:
    description: "Path to package Cargo.toml for caching"
    required: false
    default: ""
  setup-wasm32:
    description: "Whether to setup wasm32 target"
    required: false
    default: "false"
  setup-starsd:
    description: "Whether to setup starsd CLI"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      if: inputs.node-version != ''
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: "npm"
        cache-dependency-path: ${{ inputs.node-cache-path }}

    - name: Setup Rust
      if: inputs.rust-version != ''
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust-version }}
        components: rustfmt, clippy
        targets: ${{ inputs.setup-wasm32 == 'true' && 'wasm32-unknown-unknown' || '' }}

    - name: Cache Rust dependencies
      if: inputs.rust-version != ''
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ inputs.rust-workspace-path != '' && format('workspace-{0}', hashFiles(inputs.rust-workspace-path)) || '' }}-${{ inputs.rust-package-path != '' && format('package-{0}', hashFiles(inputs.rust-package-path)) || '' }}

    - name: Setup starsd CLI
      if: inputs.setup-starsd == 'true'
      shell: bash
      run: |
        curl -s https://get.starsd.com | bash
        sudo mv starsd /usr/local/bin/
        starsd version
