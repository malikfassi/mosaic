name: 'Setup starsd'
description: 'Sets up starsd binary and configures test accounts'

inputs:
  branch:
    description: 'Branch to build from'
    required: true
  deployer_mnemonic:
    description: 'Mnemonic for the deployer account'
    required: true
  minter_mnemonic:
    description: 'Mnemonic for the minter account'
    required: false
  owner_mnemonic:
    description: 'Mnemonic for the owner account'
    required: false
  user_mnemonic:
    description: 'Mnemonic for the user account'
    required: false
  node:
    description: 'RPC endpoint'
    required: false
    default: 'https://rpc.elgafar-1.stargaze-apis.com:443'
  chain_id:
    description: 'Chain ID'
    required: false
    default: 'elgafar-1'

outputs:
  deployer_address:
    description: "Address of the deployer account"
    value: ${{ steps.setup-keys.outputs.deployer_address }}
  minter_address:
    description: "Address of the minter account"
    value: ${{ steps.setup-keys.outputs.minter_address }}
  owner_address:
    description: "Address of the owner account"
    value: ${{ steps.setup-keys.outputs.owner_address }}
  user_address:
    description: "Address of the user account"
    value: ${{ steps.setup-keys.outputs.user_address }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        repository: public-awesome/stargaze
        ref: ${{ inputs.branch }}
        path: stargaze

    - uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache-dependency-path: stargaze/go.sum

    # Cache starsd binary
    - uses: actions/cache@v3
      id: starsd-cache
      with:
        path: ~/go/bin/starsd
        key: ${{ runner.os }}-starsd-${{ inputs.branch }}

    - name: Build starsd
      if: steps.starsd-cache.outputs.cache-hit != 'true'
      shell: bash
      working-directory: stargaze
      run: make install

    - name: Configure starsd keys
      id: setup-keys
      shell: bash
      run: |
        # Import deployer key
        echo "${{ inputs.deployer_mnemonic }}" | \
          starsd keys add deployer \
          --recover \
          --keyring-backend test
        DEPLOYER_ADDRESS=$(starsd keys show deployer -a --keyring-backend test)
        echo "deployer_address=$DEPLOYER_ADDRESS" >> $GITHUB_OUTPUT

        # Import minter key if provided
        if [ ! -z "${{ inputs.minter_mnemonic }}" ]; then
          echo "${{ inputs.minter_mnemonic }}" | \
            starsd keys add minter \
            --recover \
            --keyring-backend test
          MINTER_ADDRESS=$(starsd keys show minter -a --keyring-backend test)
          echo "minter_address=$MINTER_ADDRESS" >> $GITHUB_OUTPUT
        fi

        # Import owner key if provided
        if [ ! -z "${{ inputs.owner_mnemonic }}" ]; then
          echo "${{ inputs.owner_mnemonic }}" | \
            starsd keys add owner \
            --recover \
            --keyring-backend test
          OWNER_ADDRESS=$(starsd keys show owner -a --keyring-backend test)
          echo "owner_address=$OWNER_ADDRESS" >> $GITHUB_OUTPUT
        fi

        # Import user key if provided
        if [ ! -z "${{ inputs.user_mnemonic }}" ]; then
          echo "${{ inputs.user_mnemonic }}" | \
            starsd keys add user \
            --recover \
            --keyring-backend test
          USER_ADDRESS=$(starsd keys show user -a --keyring-backend test)
          echo "user_address=$USER_ADDRESS" >> $GITHUB_OUTPUT
        fi
