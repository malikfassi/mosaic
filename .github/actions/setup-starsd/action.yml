name: 'Setup starsd'
description: 'Sets up starsd binary'

inputs:
  branch:
    description: 'Branch to build from'
    required: true
  mnemonic:
    description: 'Mnemonic for the deployer account'
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        repository: public-awesome/stargaze
        ref: ${{ inputs.branch }}
        path: stargaze

    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - uses: actions/cache@v3
      id: cache-starsd
      with:
        path: |
          stargaze/target
          ~/.cargo/bin/starsd
        key: ${{ runner.os }}-starsd-${{ inputs.branch }}-${{ hashFiles('stargaze/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-starsd-${{ inputs.branch }}-
          ${{ runner.os }}-starsd-

    - name: Build starsd
      if: steps.cache-starsd.outputs.cache-hit != 'true'
      shell: bash
      working-directory: stargaze
      run: |
        make build
        mkdir -p ~/.cargo/bin
        cp build/starsd ~/.cargo/bin/

    - name: Setup deployer account
      shell: bash
      run: |
        starsd config chain-id localnet
        starsd config keyring-backend test
        starsd config node http://localhost:26657
        
        # Import deployer key
        echo "${{ inputs.mnemonic }}" | starsd keys add deployer --recover --keyring-backend test