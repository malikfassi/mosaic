name: 'Setup starsd'
description: 'Sets up starsd binary'

inputs:
  branch:
    description: 'Branch to build from'
    required: true
  mnemonic:
    description: 'Mnemonic for the deployer account'
    required: true
  node:
    description: 'RPC endpoint'
    required: false
    default: 'http://localhost:26657'
  chain_id:
    description: 'Chain ID'
    required: false
    default: 'localnet'
  gas_prices:
    description: 'Gas prices'
    required: false
    default: '0.025ustars'
  gas_adjustment:
    description: 'Gas adjustment'
    required: false
    default: '1.7'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        repository: public-awesome/stargaze
        ref: ${{ inputs.branch }}
        path: stargaze
        fetch-depth: 0

    - uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache-dependency-path: stargaze/go.sum

    # Cache starsd binary and Go modules
    - uses: actions/cache@v3
      id: starsd-cache
      with:
        path: |
          ~/go/bin/starsd
          ~/go/pkg/mod
        key: ${{ runner.os }}-starsd-${{ hashFiles('stargaze/go.sum', 'stargaze/go.mod') }}

    - name: Build starsd
      if: steps.starsd-cache.outputs.cache-hit != 'true'
      shell: bash
      working-directory: stargaze
      env:
        GOBIN: ~/go/bin
        GO111MODULE: on
        LEDGER_ENABLED: true
        VERSION: ${{ inputs.branch }}
      run: |
        # Ensure GOBIN is in PATH
        export PATH=$GOBIN:$PATH
        
        # Initialize git repo properly
        git config --global --add safe.directory $(pwd)
        
        make install

    - name: Configure starsd
      shell: bash
      if: always()
      run: |
        # Configure chain settings
        starsd config set client node ${{ inputs.node }}
        starsd config set client chain-id ${{ inputs.chain_id }}
        starsd config set client keyring-backend test
        starsd config set client gas-prices ${{ inputs.gas_prices }}
        starsd config set client gas-adjustment ${{ inputs.gas_adjustment }}

        # Import deployer key
        echo "${{ inputs.mnemonic }}" | \
          starsd keys add deployer \
          --recover \
          --keyring-backend test
