name: 'Check Previous Run'

description: 'Check if a job has a previous successful run and can be skipped'

inputs:
  execution_plan:
    description: 'JSON string containing the execution plan'
    required: true
  job_name:
    description: 'Name of the job to check'
    required: true

outputs:
  result:
    description: 'Result of the check (skipped or empty)'
    value: ${{ steps.check.outputs.result }}
  data:
    description: 'Previous run data if skipped'
    value: ${{ steps.check.outputs.data }}

runs:
  using: "composite"
  steps:
    - name: Check previous run
      id: check
      shell: bash
      run: |
        PLAN='${{ inputs.execution_plan }}'
        JOB_NAME="${{ inputs.job_name }}"
        echo "Checking job: $JOB_NAME"
        echo "Available jobs:"
        echo "$PLAN" | jq -r '.jobs | keys[]'
        echo "Looking for previous run..."
        PREV_RUN=$(echo "$PLAN" | jq -r --arg job "$JOB_NAME" \
          '.jobs[$job].previous_run')
        echo "Previous run value: $PREV_RUN"
        echo "Full job data:"
        echo "$PLAN" | jq -r --arg job "$JOB_NAME" '.jobs[$job]'
        if [[ "$PREV_RUN" != 'null' ]]; then
          echo "Found previous run, setting result to skipped"
          echo "result=skipped" >> $GITHUB_OUTPUT
          echo "data<<EOF" >> $GITHUB_OUTPUT
          echo "$PREV_RUN" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "No previous run found, continuing with job"
          echo "result=" >> $GITHUB_OUTPUT
          echo "data=" >> $GITHUB_OUTPUT
        fi
