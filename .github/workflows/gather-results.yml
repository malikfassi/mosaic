name: Gather Results

on:
  workflow_call:
    inputs:
      execution_plan:
        required: true
        type: string
      # Frontend results
      frontend_lint_result:
        required: false
        type: string
      frontend_test_result:
        required: false
        type: string
      frontend_build_result:
        required: false
        type: string
      frontend_lint_outputs:
        required: false
        type: string
      frontend_test_outputs:
        required: false
        type: string
      frontend_build_outputs:
        required: false
        type: string
      # Mosaic Tile results
      mosaic_tile_nft_clippy_result:
        required: false
        type: string
      mosaic_tile_nft_clippy_outputs:
        required: false
        type: string
      mosaic_tile_nft_fmt_result:
        required: false
        type: string
      mosaic_tile_nft_fmt_outputs:
        required: false
        type: string
      mosaic_tile_nft_test_result:
        required: false
        type: string
      mosaic_tile_nft_test_outputs:
        required: false
        type: string
      mosaic_tile_nft_compile_result:
        required: false
        type: string
      mosaic_tile_nft_compile_outputs:
        required: false
        type: string
      mosaic_tile_nft_deploy_result:
        required: false
        type: string
      mosaic_tile_nft_deploy_outputs:
        required: false
        type: string
      # Mosaic Vending results
      mosaic_vending_minter_clippy_result:
        required: false
        type: string
      mosaic_vending_minter_clippy_outputs:
        required: false
        type: string
      mosaic_vending_minter_fmt_result:
        required: false
        type: string
      mosaic_vending_minter_fmt_outputs:
        required: false
        type: string
      mosaic_vending_minter_test_result:
        required: false
        type: string
      mosaic_vending_minter_test_outputs:
        required: false
        type: string
      mosaic_vending_minter_compile_result:
        required: false
        type: string
      mosaic_vending_minter_compile_outputs:
        required: false
        type: string
      mosaic_vending_minter_deploy_result:
        required: false
        type: string
      mosaic_vending_minter_deploy_outputs:
        required: false
        type: string
      # E2E results
      mosaic_tile_nft_e2e_result:
        required: false
        type: string
      mosaic_tile_nft_e2e_outputs:
        required: false
        type: string
      mosaic_vending_minter_e2e_result:
        required: false
        type: string
      mosaic_vending_minter_e2e_outputs:
        required: false
        type: string
      full_e2e_result:
        required: false
        type: string
      full_e2e_outputs:
        required: false
        type: string

    outputs:
      plan_results:
        description: "JSON string containing all job results"
        value: ${{ jobs.gather.outputs.plan_results }}

jobs:
  gather:
    runs-on: ubuntu-latest
    outputs:
      plan_results: ${{ steps.gather.outputs.plan_results }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: ./.github/actions/setup-node
        with:
          working-directory: .github/workflow-scripts
          node-version: '20'

      - name: Gather results
        id: gather
        working-directory: .github/workflow-scripts
        env:
          EXECUTION_PLAN: ${{ inputs.execution_plan }}
          # Frontend results
          FRONTEND_LINT_RESULT: ${{ inputs.frontend_lint_result }}
          FRONTEND_TEST_RESULT: ${{ inputs.frontend_test_result }}
          FRONTEND_BUILD_RESULT: ${{ inputs.frontend_build_result }}
          FRONTEND_LINT_OUTPUTS: ${{ inputs.frontend_lint_outputs }}
          FRONTEND_TEST_OUTPUTS: ${{ inputs.frontend_test_outputs }}
          FRONTEND_BUILD_OUTPUTS: ${{ inputs.frontend_build_outputs }}
          # Mosaic Tile results
          MOSAIC_TILE_NFT_CLIPPY_RESULT: ${{ inputs.mosaic_tile_nft_clippy_result }}
          MOSAIC_TILE_NFT_CLIPPY_OUTPUTS: ${{ inputs.mosaic_tile_nft_clippy_outputs }}
          MOSAIC_TILE_NFT_FMT_RESULT: ${{ inputs.mosaic_tile_nft_fmt_result }}
          MOSAIC_TILE_NFT_FMT_OUTPUTS: ${{ inputs.mosaic_tile_nft_fmt_outputs }}
          MOSAIC_TILE_NFT_TEST_RESULT: ${{ inputs.mosaic_tile_nft_test_result }}
          MOSAIC_TILE_NFT_TEST_OUTPUTS: ${{ inputs.mosaic_tile_nft_test_outputs }}
          MOSAIC_TILE_NFT_COMPILE_RESULT: ${{ inputs.mosaic_tile_nft_compile_result }}
          MOSAIC_TILE_NFT_COMPILE_OUTPUTS: ${{ inputs.mosaic_tile_nft_compile_outputs }}
          MOSAIC_TILE_NFT_DEPLOY_RESULT: ${{ inputs.mosaic_tile_nft_deploy_result }}
          MOSAIC_TILE_NFT_DEPLOY_OUTPUTS: ${{ inputs.mosaic_tile_nft_deploy_outputs }}
          # Mosaic Vending results
          MOSAIC_VENDING_MINTER_CLIPPY_RESULT: ${{ inputs.mosaic_vending_minter_clippy_result }}
          MOSAIC_VENDING_MINTER_CLIPPY_OUTPUTS: ${{ inputs.mosaic_vending_minter_clippy_outputs }}
          MOSAIC_VENDING_MINTER_FMT_RESULT: ${{ inputs.mosaic_vending_minter_fmt_result }}
          MOSAIC_VENDING_MINTER_FMT_OUTPUTS: ${{ inputs.mosaic_vending_minter_fmt_outputs }}
          MOSAIC_VENDING_MINTER_TEST_RESULT: ${{ inputs.mosaic_vending_minter_test_result }}
          MOSAIC_VENDING_MINTER_TEST_OUTPUTS: ${{ inputs.mosaic_vending_minter_test_outputs }}
          MOSAIC_VENDING_MINTER_COMPILE_RESULT: ${{ inputs.mosaic_vending_minter_compile_result }}
          MOSAIC_VENDING_MINTER_COMPILE_OUTPUTS: ${{ inputs.mosaic_vending_minter_compile_outputs }}
          MOSAIC_VENDING_MINTER_DEPLOY_RESULT: ${{ inputs.mosaic_vending_minter_deploy_result }}
          MOSAIC_VENDING_MINTER_DEPLOY_OUTPUTS: ${{ inputs.mosaic_vending_minter_deploy_outputs }}
          # E2E results
          MOSAIC_TILE_NFT_E2E_RESULT: ${{ inputs.mosaic_tile_nft_e2e_result }}
          MOSAIC_TILE_NFT_E2E_OUTPUTS: ${{ inputs.mosaic_tile_nft_e2e_outputs }}
          MOSAIC_VENDING_MINTER_E2E_RESULT: ${{ inputs.mosaic_vending_minter_e2e_result }}
          MOSAIC_VENDING_MINTER_E2E_OUTPUTS: ${{ inputs.mosaic_vending_minter_e2e_outputs }}
          FULL_E2E_RESULT: ${{ inputs.full_e2e_result }}
          FULL_E2E_OUTPUTS: ${{ inputs.full_e2e_outputs }}
        run: |
          npm run gather-plan-results
          RESULTS=$(cat plan-results.json | jq -c .)
          echo "plan_results=${RESULTS}" >> $GITHUB_OUTPUT