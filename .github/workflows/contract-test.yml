name: Contract Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'contracts/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'contracts/**'

env:
  CARGO_TERM_COLOR: always
  STARGAZE_TESTNET_RPC: "https://rpc.elgafar-1.stargaze-apis.com"
  STARGAZE_TESTNET_CHAIN_ID: "elgafar-1"

jobs:
  test:
    name: Contract Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check format
        working-directory: ./contracts/pixel-canvas
        run: cargo fmt -- --check
      
      - name: Run clippy
        working-directory: ./contracts/pixel-canvas
        run: cargo clippy -- -D warnings
      
      - name: Run unit tests
        working-directory: ./contracts/pixel-canvas
        run: cargo test --verbose
      
      - name: Generate code coverage
        working-directory: ./contracts/pixel-canvas
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --verbose --workspace --timeout 120 --out Xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          directory: ./contracts/pixel-canvas

  testnet-deploy:
    name: Testnet Deployment
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install CosmJS CLI
        run: npm install -g @cosmjs/cli

      - name: Build contract
        working-directory: ./contracts/pixel-canvas
        run: |
          cargo build --release --target wasm32-unknown-unknown
          cargo wasm

      - name: Setup testnet wallet
        run: |
          echo "${{ secrets.TESTNET_MNEMONIC }}" > testnet-wallet.txt
          chmod 600 testnet-wallet.txt

      - name: Deploy to testnet
        working-directory: ./contracts/pixel-canvas
        run: |
          CONTRACT_CODE_ID=$(cosmjs-cli --chain-id $STARGAZE_TESTNET_CHAIN_ID \
            --from testnet-wallet.txt \
            --gas-prices 0.025ustars \
            tx wasm store artifacts/pixel_canvas.wasm --output json | jq -r '.logs[0].events[0].attributes[0].value')
          echo "CONTRACT_CODE_ID=$CONTRACT_CODE_ID" >> $GITHUB_ENV

      - name: Run integration tests
        working-directory: ./contracts/pixel-canvas/tests
        run: |
          npm install @cosmjs/cosmwasm-stargate
          node integration-tests.js \
            --rpc $STARGAZE_TESTNET_RPC \
            --chain-id $STARGAZE_TESTNET_CHAIN_ID \
            --contract-id $CONTRACT_CODE_ID

      - name: Cleanup
        if: always()
        run: rm -f testnet-wallet.txt