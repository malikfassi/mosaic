name: Contract Test

on:
  workflow_call:
    inputs:
      contract_name:
        required: true
        type: string
        description: "Name of the contract to test"
      execution_plan:
        required: true
        type: string
        description: "JSON string containing the execution plan"
    outputs:
      result:
        description: "Result of the workflow (success/failure/skipped)"
        value: ${{ jobs.test.outputs.result }}
      data:
        description: "JSON string containing all job data"
        value: ${{ jobs.test.outputs.data }}

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.set-result.outputs.result }}
      data: ${{ steps.set-result.outputs.data }}
    steps:
      - uses: actions/checkout@v3

      - name: Check previous run
        id: check
        uses: ./.github/actions/check-previous-run
        with:
          execution_plan: ${{ inputs.execution_plan }}
          job_name: test_${{ inputs.contract_name }}

      - name: Setup environment
        if: steps.check.outputs.result != 'skipped'
        uses: ./.github/actions/setup-env
        with:
          rust-version: stable
          rust-workspace-path: contracts/Cargo.toml
          rust-package-path: contracts/${{ inputs.contract_name }}/Cargo.toml

      - name: Run tests
        id: test
        if: steps.check.outputs.result != 'skipped'
        run: |
          cd contracts/${{ inputs.contract_name }}
          cargo test

      - name: Set result
        id: set-result
        if: always()
        run: |
          if [[ "${{ steps.check.outputs.result }}" == "skipped" ]]; then
            echo "data=${{ steps.check.outputs.data }}" >> $GITHUB_OUTPUT
            echo "result=skipped" >> $GITHUB_OUTPUT
          else
            echo "result=${{ job.status }}" >> $GITHUB_OUTPUT
          fi 