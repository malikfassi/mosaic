name: Frontend

on:
  push:
    paths:
      - 'frontend/**'
  pull_request:
    paths:
      - 'frontend/**'

env:
  STARGAZE_RPC: "https://rpc.elgafar-1.stargaze-apis.com"
  STARGAZE_CHAIN_ID: "elgafar-1"
  STARGAZE_DENOM: "ustars"
  GAS_PRICE: "0.025ustars"

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Run lint
        if: matrix.task == 'lint'
        working-directory: frontend
        run: |
          npm run lint
          npm run typecheck
      
      - name: Run tests
        if: matrix.task == 'test'
        working-directory: frontend
        run: npm test

  build:
    needs: checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Build
        working-directory: frontend
        env:
          VITE_STARGAZE_RPC: ${{ env.STARGAZE_RPC }}
          VITE_STARGAZE_CHAIN_ID: ${{ env.STARGAZE_CHAIN_ID }}
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist
          retention-days: 1
          if-no-files-found: error

  e2e:
    needs: [build]
    runs-on: ubuntu-latest
    environment: testnet
    steps:
      - uses: actions/checkout@v4
      
      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Wait for contracts
        run: |
          # Wait for contracts workflow to complete
          gh run watch "${{ github.run_id }}" --repo "${{ github.repository }}"
          
          # Get contract IDs from artifacts
          NFT_CODE_ID=$(gh run download "${{ github.run_id }}" -n contract-ids --repo "${{ github.repository }}" | jq -r .nft_code_id)
          COLOR_CODE_ID=$(gh run download "${{ github.run_id }}" -n contract-ids --repo "${{ github.repository }}" | jq -r .color_code_id)
          
          echo "NFT_CODE_ID=$NFT_CODE_ID" >> $GITHUB_ENV
          echo "COLOR_CODE_ID=$COLOR_CODE_ID" >> $GITHUB_ENV
      
      - name: Start local server
        working-directory: frontend
        env:
          VITE_STARGAZE_RPC: ${{ env.STARGAZE_RPC }}
          VITE_STARGAZE_CHAIN_ID: ${{ env.STARGAZE_CHAIN_ID }}
          VITE_NFT_CODE_ID: ${{ env.NFT_CODE_ID }}
          VITE_COLOR_CODE_ID: ${{ env.COLOR_CODE_ID }}
        run: |
          npm run dev &
          sleep 10
      
      - name: Run E2E tests
        working-directory: frontend
        env:
          STARGAZE_RPC: ${{ env.STARGAZE_RPC }}
          STARGAZE_CHAIN_ID: ${{ env.STARGAZE_CHAIN_ID }}
          NFT_CODE_ID: ${{ env.NFT_CODE_ID }}
          COLOR_CODE_ID: ${{ env.COLOR_CODE_ID }}
        run: npm run test:e2e