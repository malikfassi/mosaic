name: Pixel Canvas CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  pull-requests: read  # Required for the changes job
  contents: read      # Required for checkout and git operations
  actions: read      # Required to read workflow runs

jobs:
  # Initial setup jobs
  changes:
    uses: ./.github/workflows/reusable-changes.yml

  rust-setup:
    uses: ./.github/workflows/reusable-rust-setup.yml

  # CI jobs
  frontend-ci:
    needs: changes
    uses: ./.github/workflows/reusable-frontend.yml
    with:
      needs_run: ${{ needs.changes.outputs.frontend_needs_run }}

  contracts-ci:
    needs: [changes, rust-setup]
    uses: ./.github/workflows/reusable-contracts.yml
    strategy:
      matrix:
        contract: [mosaic-tile, mosaic-vending]
      fail-fast: false
    with:
      contract_name: ${{ matrix.contract }}
      needs_run: ${{ matrix.contract == 'mosaic-tile' && needs.changes.outputs.mosaic_tile_needs_run || needs.changes.outputs.mosaic_vending_needs_run }}

  # Deployment jobs
  deploy:
    needs: contracts-ci
    strategy:
      matrix:
        contract: [mosaic-tile, mosaic-vending]
      fail-fast: false
    if: needs.contracts-ci.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy ${{ matrix.contract }} contract
        run: echo "Deploying ${{ matrix.contract }} contract..."

  # E2E test jobs
  component-e2e:
    needs: deploy
    uses: ./.github/workflows/reusable-e2e.yml
    strategy:
      matrix:
        component: [mosaic-tile, mosaic-vending]
      fail-fast: false
    with:
      test_type: ${{ matrix.component }}
      needs_run: ${{ matrix.component == 'mosaic-tile' && needs.changes.outputs.mosaic_tile_needs_run || needs.changes.outputs.mosaic_vending_needs_run }}

  full-e2e:
    needs: [frontend-ci, component-e2e]
    uses: ./.github/workflows/reusable-e2e.yml
    with:
      test_type: full
      needs_run: ${{ needs.changes.outputs.full_e2e_needs_run }}

  # Final notification
  notify:
    needs: [changes, frontend-ci, contracts-ci, deploy, component-e2e, full-e2e]
    if: always()
    uses: ./.github/workflows/reusable-notify.yml
    with:
      frontend_ci_result: ${{ needs.frontend-ci.result }}
      mosaic_tile_ci_result: ${{ fromJSON('{"mosaic-tile":"' + needs.contracts-ci.result + '"}')[matrix.contract] }}
      mosaic_vending_ci_result: ${{ fromJSON('{"mosaic-vending":"' + needs.contracts-ci.result + '"}')[matrix.contract] }}
      mosaic_tile_deploy_result: ${{ fromJSON('{"mosaic-tile":"' + needs.deploy.result + '"}')[matrix.contract] }}
      mosaic_vending_deploy_result: ${{ fromJSON('{"mosaic-vending":"' + needs.deploy.result + '"}')[matrix.contract] }}
      mosaic_tile_e2e_result: ${{ fromJSON('{"mosaic-tile":"' + needs.component-e2e.result + '"}')[matrix.component] }}
      mosaic_vending_e2e_result: ${{ fromJSON('{"mosaic-vending":"' + needs.component-e2e.result + '"}')[matrix.component] }}
      full_e2e_result: ${{ needs.full-e2e.result }}
      frontend_hash: ${{ needs.changes.outputs.frontend_hash }}
      mosaic_tile_hash: ${{ needs.changes.outputs.mosaic_tile_hash }}
      mosaic_vending_hash: ${{ needs.changes.outputs.mosaic_vending_hash }}
    secrets:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      GIST_TOKEN: ${{ secrets.GIST_TOKEN }}