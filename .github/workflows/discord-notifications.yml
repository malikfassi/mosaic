name: Discord Notifications

on:
  workflow_run:
    workflows:
      - "Frontend"
      - "Contracts"
    types:
      - completed

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Get workflow details
        id: workflow
        run: |
          # Get workflow info
          WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
          WORKFLOW_STATUS="${{ github.event.workflow_run.conclusion }}"
          BRANCH="${{ github.event.workflow_run.head_branch }}"
          COMMIT_SHA="${{ github.event.workflow_run.head_sha }}"
          COMMIT_MSG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "${{ github.event.workflow_run.head_repository.url }}/git/commits/${{ github.event.workflow_run.head_sha }}" \
            | jq -r '.message' | head -n 1)
          ACTOR="${{ github.event.workflow_run.actor.login }}"
          DURATION=$((${{ github.event.workflow_run.updated_at }} - ${{ github.event.workflow_run.run_started_at }}))
          
          # Set emoji and color based on status
          if [ "$WORKFLOW_STATUS" = "success" ]; then
            STATUS_EMOJI="✅"
            COLOR="3066993"  # Green
          elif [ "$WORKFLOW_STATUS" = "failure" ]; then
            STATUS_EMOJI="❌"
            COLOR="15158332"  # Red
          else
            STATUS_EMOJI="⚠️"
            COLOR="16776960"  # Yellow
          fi
          
          # Export variables
          {
            echo "name=$WORKFLOW_NAME"
            echo "status=$WORKFLOW_STATUS"
            echo "emoji=$STATUS_EMOJI"
            echo "color=$COLOR"
            echo "branch=$BRANCH"
            echo "commit_sha=${COMMIT_SHA:0:7}"
            echo "commit_msg=$COMMIT_MSG"
            echo "actor=$ACTOR"
            echo "duration=$DURATION"
          } >> $GITHUB_OUTPUT

      - name: Download test artifacts
        if: |
          github.event.workflow_run.conclusion == 'success' &&
          contains(github.event.workflow_run.name, 'Contracts')
        uses: actions/download-artifact@v3
        with:
          name: test-artifacts
          path: artifacts

      - name: Read test wallet info
        if: |
          github.event.workflow_run.conclusion == 'success' &&
          contains(github.event.workflow_run.name, 'Contracts')
        id: test-wallet
        run: |
          if [ -f "artifacts/test-wallet.txt" ]; then
            WALLET_INFO=$(cat artifacts/test-wallet.txt)
            echo "mnemonic=$WALLET_INFO" >> $GITHUB_OUTPUT
          fi

      - name: Send workflow notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            {
              "embeds": [{
                "title": "${{ steps.workflow.outputs.emoji }} ${{ steps.workflow.outputs.name }} Workflow",
                "description": "**Status:** \`${{ steps.workflow.outputs.status }}\`\n**Duration:** \`${{ steps.workflow.outputs.duration }}s\`",
                "color": ${{ steps.workflow.outputs.color }},
                "fields": [
                  {
                    "name": "Triggered By",
                    "value": "\`${{ steps.workflow.outputs.actor }}\`",
                    "inline": true
                  },
                  {
                    "name": "Branch",
                    "value": "\`${{ steps.workflow.outputs.branch }}\`",
                    "inline": true
                  },
                  {
                    "name": "Commit",
                    "value": "\`${{ steps.workflow.outputs.commit_sha }}\` - ${{ steps.workflow.outputs.commit_msg }}",
                    "inline": false
                  }
                ],
                "footer": {
                  "text": "Pixel Canvas CI/CD"
                },
                "timestamp": "${{ github.event.workflow_run.updated_at }}"
              }]
            }

      - name: Send test report
        if: |
          github.event.workflow_run.conclusion == 'success' &&
          contains(github.event.workflow_run.name, 'Contracts') &&
          steps.test-wallet.outputs.mnemonic != ''
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            {
              "embeds": [{
                "title": "📊 Contract Test Results",
                "description": "Test suite completed successfully",
                "color": 3066993,
                "fields": [
                  {
                    "name": "Duration",
                    "value": "\`${{ steps.workflow.outputs.duration }}s\`",
                    "inline": true
                  },
                  {
                    "name": "Run By",
                    "value": "\`${{ steps.workflow.outputs.actor }}\`",
                    "inline": true
                  },
                  {
                    "name": "Test Wallet Mnemonic",
                    "value": "\`${{ steps.test-wallet.outputs.mnemonic }}\`",
                    "inline": false
                  }
                ],
                "footer": {
                  "text": "Pixel Canvas Tests"
                },
                "timestamp": "${{ github.event.workflow_run.updated_at }}"
              }]
            }

      - name: Send deployment notification
        if: |
          github.event.workflow_run.conclusion == 'success' &&
          contains(github.event.workflow_run.name, 'Contracts') &&
          contains(github.event.workflow_run.head_commit.message, 'deploy')
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            {
              "embeds": [{
                "title": "🚀 Contract Deployment",
                "description": "New contract deployment completed successfully",
                "color": 3447003,
                "fields": [
                  {
                    "name": "Environment",
                    "value": "\`${{ github.event.workflow_run.environment }}\`",
                    "inline": true
                  },
                  {
                    "name": "Deployed By",
                    "value": "\`${{ steps.workflow.outputs.actor }}\`",
                    "inline": true
                  },
                  {
                    "name": "Commit",
                    "value": "\`${{ steps.workflow.outputs.commit_sha }}\` - ${{ steps.workflow.outputs.commit_msg }}",
                    "inline": false
                  }
                ],
                "footer": {
                  "text": "Pixel Canvas Deployments"
                },
                "timestamp": "${{ github.event.workflow_run.updated_at }}"
              }]
            }