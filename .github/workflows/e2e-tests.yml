name: End-to-End Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"
  STARGAZE_TESTNET_RPC: "https://rpc.elgafar-1.stargaze-apis.com"
  STARGAZE_TESTNET_CHAIN_ID: "elgafar-1"

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          npm install -g @cosmjs/cli @cosmjs/stargate @cosmjs/cosmwasm-stargate
          cargo install cargo-run-script
      
      - name: Build contracts
        run: |
          ls
          cd contracts/sg721-pixel && cargo wasm
          cd ../pixel-coloring && cargo wasm
      
      - name: Generate test wallet
        run: |
          TEST_WALLET=$(cosmjs-cli keys generate)
          echo "TEST_WALLET_ADDRESS=$(echo $TEST_WALLET | jq -r '.address')" >> $GITHUB_ENV
          echo "TEST_WALLET_MNEMONIC=$(echo $TEST_WALLET | jq -r '.mnemonic')" >> $GITHUB_ENV
      
      - name: Check deployment wallet balance
        run: |
          echo "${{ secrets.TESTNET_MNEMONIC }}" > deploy-wallet.txt
          DEPLOY_BALANCE=$(cosmjs-cli --chain-id $STARGAZE_TESTNET_CHAIN_ID \
            --from deploy-wallet.txt \
            query bank balances $(cosmjs-cli --from deploy-wallet.txt keys show -a))
          
          MIN_REQUIRED=1000000 # 1 STARS
          CURRENT_BALANCE=$(echo $DEPLOY_BALANCE | jq -r '.balances[] | select(.denom=="ustars") | .amount')
          
          if [ "$CURRENT_BALANCE" -lt "$MIN_REQUIRED" ]; then
            echo "::warning::Deployment wallet balance too low: $CURRENT_BALANCE ustars"
            exit 1
          fi
      
      - name: Fund test wallet
        run: |
          cosmjs-cli --chain-id $STARGAZE_TESTNET_CHAIN_ID \
            --from deploy-wallet.txt \
            tx bank send $(cosmjs-cli --from deploy-wallet.txt keys show -a) \
            $TEST_WALLET_ADDRESS 500000ustars
      
      - name: Deploy contracts
        run: |
          # Deploy NFT contract
          NFT_CODE_ID=$(cosmjs-cli --chain-id $STARGAZE_TESTNET_CHAIN_ID \
            --from deploy-wallet.txt \
            --gas-prices 0.025ustars \
            tx wasm store contracts/sg721-pixel/artifacts/sg721_pixel.wasm --output json | \
            jq -r '.logs[0].events[0].attributes[0].value')
          echo "NFT_CODE_ID=$NFT_CODE_ID" >> $GITHUB_ENV
          
          # Deploy coloring contract
          COLOR_CODE_ID=$(cosmjs-cli --chain-id $STARGAZE_TESTNET_CHAIN_ID \
            --from deploy-wallet.txt \
            --gas-prices 0.025ustars \
            tx wasm store contracts/pixel-coloring/artifacts/pixel_coloring.wasm --output json | \
            jq -r '.logs[0].events[0].attributes[0].value')
          echo "COLOR_CODE_ID=$COLOR_CODE_ID" >> $GITHUB_ENV
      
      - name: Run E2E tests
        run: |
          echo "Running E2E tests with:"
          echo "Test wallet: $TEST_WALLET_ADDRESS"
          echo "NFT contract: $NFT_CODE_ID"
          echo "Coloring contract: $COLOR_CODE_ID"
          
          # Run the actual E2E tests
          cd e2e
          npm install
          npm test -- \
            --chain-id $STARGAZE_TESTNET_CHAIN_ID \
            --rpc $STARGAZE_TESTNET_RPC \
            --nft-code-id $NFT_CODE_ID \
            --color-code-id $COLOR_CODE_ID \
            --test-wallet "$TEST_WALLET_MNEMONIC"
      
      - name: Generate test report
        if: always()
        run: |
          echo "E2E Test Summary" > test-report.md
          echo "================" >> test-report.md
          echo "" >> test-report.md
          echo "- Test wallet: \`$TEST_WALLET_ADDRESS\`" >> test-report.md
          echo "- NFT contract: \`$NFT_CODE_ID\`" >> test-report.md
          echo "- Coloring contract: \`$COLOR_CODE_ID\`" >> test-report.md
          echo "" >> test-report.md
          echo "Test Results" >> test-report.md
          echo "------------" >> test-report.md
          cat e2e/test-results.json >> test-report.md
      
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-report
          path: test-report.md
          retention-days: 14
      
      - name: Return unused funds
        if: always()
        run: |
          REMAINING=$(cosmjs-cli --chain-id $STARGAZE_TESTNET_CHAIN_ID \
            query bank balances $TEST_WALLET_ADDRESS | \
            jq -r '.balances[] | select(.denom=="ustars") | .amount')
          
          if [ "$REMAINING" -gt "10000" ]; then
            cosmjs-cli --chain-id $STARGAZE_TESTNET_CHAIN_ID \
              --from test-wallet.txt \
              tx bank send $TEST_WALLET_ADDRESS \
              $(cosmjs-cli --from deploy-wallet.txt keys show -a) \
              $(($REMAINING - 10000))ustars
          fi
      
      - name: Cleanup
        if: always()
        run: |
          rm -f deploy-wallet.txt test-wallet.txt 