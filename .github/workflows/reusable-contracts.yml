name: Contract CI

on:
  workflow_call:
    inputs:
      contract_name:
        required: true
        type: string
        description: "Name of the contract (mosaic-tile-nft or mosaic-vending-minter)"
      needs_run:
        required: true
        type: string
        description: "Whether this workflow needs to run ('true' or 'false')"
      component_hash:
        required: true
        type: string
        description: "Hash of the contract component state"

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Check if job needs to run
        id: check
        run: |
          if [[ "${{ inputs.needs_run }}" != "true" ]]; then
            echo "Job can be skipped - reusing previous successful run"
            exit 0
          fi

      - uses: actions/checkout@v3

      # Cache Rust toolchain and target directory
      - name: Cache Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            contracts/target/
          key: ${{ runner.os }}-cargo-${{ inputs.component_hash }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Check formatting
        run: |
          cd contracts/${{ inputs.contract_name }}
          cargo fmt -- --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check if job needs to run
        id: check
        run: |
          if [[ "${{ inputs.needs_run }}" != "true" ]]; then
            echo "Job can be skipped - reusing previous successful run"
            exit 0
          fi

      - uses: actions/checkout@v3

      # Cache Rust toolchain and target directory
      - name: Cache Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            contracts/target/
          key: ${{ runner.os }}-cargo-${{ inputs.component_hash }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Run clippy
        run: |
          cd contracts/${{ inputs.contract_name }}
          cargo clippy -- -D warnings

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check if job needs to run
        id: check
        run: |
          if [[ "${{ inputs.needs_run }}" != "true" ]]; then
            echo "Job can be skipped - reusing previous successful run"
            exit 0
          fi

      - uses: actions/checkout@v3

      # Cache Rust toolchain and target directory
      - name: Cache Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            contracts/target/
          key: ${{ runner.os }}-cargo-${{ inputs.component_hash }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run unit tests
        run: |
          cd contracts/${{ inputs.contract_name }}
          cargo test

  schema:
    needs: [format, lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Check if job needs to run
        id: check
        run: |
          if [[ "${{ inputs.needs_run }}" != "true" ]]; then
            echo "Job can be skipped - reusing previous successful run"
            exit 0
          fi

      - uses: actions/checkout@v3

      # Cache Rust toolchain and target directory
      - name: Cache Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            contracts/target/
          key: ${{ runner.os }}-cargo-${{ inputs.component_hash }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Check schema generation
        run: |
          cd contracts/${{ inputs.contract_name }}
          cargo run --example schema