name: Frontend CI

on:
  workflow_call:
    inputs:
      needs_run:
        required: true
        type: string
        description: "Whether this workflow needs to run ('true' or 'false')"
      component_hash:
        required: true
        type: string
        description: "Hash of the frontend component state"
    outputs:
      lint_result:
        description: "Result of the lint job"
        value: ${{ jobs.lint.outputs.result }}
      test_result:
        description: "Result of the test job"
        value: ${{ jobs.test.outputs.result }}
      build_result:
        description: "Result of the build job"
        value: ${{ jobs.build.outputs.result }}

jobs:
  lint:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.set-result.outputs.result }}
    steps:
      - name: Check if job needs to run
        id: check
        run: |
          if [[ "${{ inputs.needs_run }}" != "true" ]]; then
            echo "Job can be skipped - reusing previous successful run"
            exit 0
          fi

      - uses: actions/checkout@v3

      # Setup Node with npm cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run linting
        working-directory: frontend
        run: npm run lint

      - name: Set result
        id: set-result
        if: always()
        run: |
          if [[ "${{ inputs.needs_run }}" == "false" ]]; then
            echo "result=skipped" >> $GITHUB_OUTPUT
          else
            echo "result=${{ job.status }}" >> $GITHUB_OUTPUT
          fi

  test:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      result: ${{ steps.set-result.outputs.result }}
    steps:
      - name: Check if job needs to run
        id: check
        run: |
          if [[ "${{ inputs.needs_run }}" == "f" ]]; then
            echo "Job can be skipped - reusing previous successful run"
            exit 0
          fi

      - uses: actions/checkout@v3

      # Setup Node with npm cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run tests
        working-directory: frontend
        run: npm test

      - name: Set result
        id: set-result
        if: always()
        run: |
          if [[ "${{ inputs.needs_run }}" == "false" ]]; then
            echo "result=skipped" >> $GITHUB_OUTPUT
          else
            echo "result=${{ job.status }}" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    outputs:
      result: ${{ steps.set-result.outputs.result }}
    steps:
      - name: Check if job needs to run
        id: check
        run: |
          if [[ "${{ inputs.needs_run }}" != "true" ]]; then
            echo "Job can be skipped - reusing previous successful run"
            exit 0
          fi

      - uses: actions/checkout@v3

      # Setup Node with npm cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # Cache build output
      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: |
            frontend/.next
            frontend/out
          key: ${{ runner.os }}-frontend-build-${{ inputs.component_hash }}
          restore-keys: |
            ${{ runner.os }}-frontend-build-

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build
        working-directory: frontend
        run: npm run build

      - name: Set result
        id: set-result
        if: always()
        run: |
          if [[ "${{ inputs.needs_run }}" == "false" ]]; then
            echo "result=skipped" >> $GITHUB_OUTPUT
          else
            echo "result=${{ job.status }}" >> $GITHUB_OUTPUT
          fi